{"version":3,"sources":["config/firebase.js","config/auth.js","constants/Colors.js","constants/Fonts.js","components/Hero.js","icons/Arrow.js","components/MenuButton.js","components/LogoutButton.js","screens/HomeScreen.js","screens/LogInScreen.js","screens/SignUpScreen.js","components/AddActivity.js","screens/CreateActivityScreen.js","components/MainButton.js","components/AddRoutine.js","components/Title.js","screens/CreateRoutineScreen.js","screens/SavedRoutinesScreen.js","navigation/Navigation.js","App.js","index.js","assets/images/black.jpg"],"names":["Firebase","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthContext","createContext","AuthProvider","children","useState","authUser","setAuthUser","authLoading","setAuthLoading","useEffect","unsubscribe","firebase","auth","onAuthStateChanged","user","Provider","value","useAuth","React","useContext","colors","button","lightWhite","dark","black","font","extrabold","italic","regular","gloria","width","Dimensions","get","styles","StyleSheet","create","welcomeImage","height","position","titletext","color","fontFamily","top","left","fontSize","welcometext","textTransform","Hero","ImageBackground","style","source","heroImage","Text","Icon","xmlns","viewBox","fill","d","marginTop","marginBottom","flexDirection","alignItems","justifyContent","backgroundColor","borderRadius","borderWidth","borderColor","paddingLeft","paddingRight","buttonText","MenuButton","props","text","onPress","TouchableOpacity","Arrow","bottom","paddingBottom","LogoutButton","container","flex","paddingVertical","HomeScreen","navigation","View","navigate","signOut","textInput","LogInScreen","userEmail","setUserEmail","userPassword","setUserPassword","userError","setUserError","setLoading","Button","title","type","TextInput","autoCapitalize","placeholder","onChange","e","target","secureTextEntry","async","preventDefault","signInWithEmailAndPassword","err","message","SignUpScreen","createUserWithEmailAndPassword","AddActivity","db","firestore","activityName","setActivityName","minutes","setMinutes","number","parseInt","isInvalid","name","id","onChangeText","keyboardType","collection","doc","set","description","addedByUserUid","uid","then","console","log","catch","error","disabled","CreateActivityScreen","activity","setActivity","tempArray","querySnapshot","forEach","push","data","map","item","key","addNewActivity","object","alignSelf","marginLeft","timeInput","AddRoutine","routineName","setRoutineName","MainButton","topview","circle","right","transform","rotate","Title","CreateRoutineScreen","routine","setRoutine","addNewRoutine","infotext","SavedRoutineScreen","SwitchNavigator","createSwitchNavigator","screen","SavedRoutinesScreen","initialRouteName","createBrowserApp","disableYellowBox","App","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cd4b49d2.chunk.js","sourcesContent":["import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Import keys from .env-file\r\n// import {\r\n//   API_KEY,\r\n//   AUTH_DOMAIN,\r\n//   DATABASE_URL,\r\n//   PROJECT_ID,\r\n//   MESSAGE_SENDER_ID,\r\n//   APP_ID\r\n// } from \"react-native-dotenv\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: \"\",\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst Firebase = app.initializeApp(config);\r\nexport default Firebase;\r\n\r\n// import firebase from \"firebase/app\";\r\n// import \"firebase/auth\";\r\n// import \"firebase/firestore\";\r\n// import \"firebase/storage\";\r\n\r\n// import {\r\n//   API_KEY,\r\n//   AUTH_DOMAIN,\r\n//   DATABASE_URL,\r\n//   PROJECT_ID,\r\n//   MESSAGE_SENDER_ID,\r\n//   APP_ID\r\n// } from \"react-native-dotenv\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: API_KEY,\r\n//   authDomain: AUTH_DOMAIN,\r\n//   databaseURL: DATABASE_URL,\r\n//   projectId: PROJECT_ID,\r\n//   storageBucket: \"\",\r\n//   messagingSenderId: MESSAGE_SENDER_ID,\r\n//   appId: APP_ID\r\n// };\r\n\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\n// export const firestore = firebase.firestore();\r\n// export const auth = firebase.auth();\r\n// export const storage = firebase.storage();\r\n\r\n// window.firebase = firebase;\r\n\r\n// // create users collection\r\n// export const createUsersDocument = async user => {\r\n//   if (!user) return;\r\n\r\n//   const userRef = firestore.doc(`users/${user.uid}`);\r\n\r\n//   const snapshot = await userRef.get();\r\n\r\n//   if (!snapshot.exists) {\r\n//     const { email } = user;\r\n//     const createdAt = new Date();\r\n//     try {\r\n//       await userRef.set({\r\n//         email,\r\n//         createdAt\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error creating user\", error.message);\r\n//     }\r\n//   }\r\n\r\n//   return getUserDocument(user.uid);\r\n// };\r\n\r\n// export const getUserDocument = async uid => {\r\n//   if (!uid) return null;\r\n//   try {\r\n//     return firestore.collection(\"users\").doc(uid);\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching user\", error.message);\r\n//   }\r\n// };\r\n\r\n// export default firebase;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport firebase from \"./firebase\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [authUser, setAuthUser] = useState(null);\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n      setAuthUser(user);\r\n      setAuthLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authUser, authLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n","const colors = {\r\n  button: \"#035E5B\",\r\n  lightWhite: \"#FBFBFB\",\r\n  dark: \"#1B1A18\",\r\n  black: \"#000000\"\r\n};\r\n\r\nexport default colors;\r\n","const font = {\r\n  extrabold: \"Raleway-ExtraBold\",\r\n  italic: \"Raleway-LightItalic\",\r\n  regular: \"Raleway-Regular\",\r\n  gloria: \"GloriaHallelujah-Regular\"\r\n};\r\n\r\nexport default font;\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, ImageBackground } from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\nimport { Dimensions } from \"react-native\";\r\nimport heroImage from \"../assets/images/black.jpg\";\r\n\r\nvar width = Dimensions.get(\"window\").width; //full width\r\n// var height = Dimensions.get(\"window\").height; //full height\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <ImageBackground style={styles.welcomeImage} source={heroImage}>\r\n      <Text style={styles.welcometext}>Min app för:</Text>\r\n      <Text style={styles.titletext}>\r\n        Mina{\"\\n\"}rutiner{\"\\n\"}i vardagen\r\n      </Text>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  welcomeImage: {\r\n    width: width,\r\n    height: 200,\r\n    position: \"relative\"\r\n  },\r\n  titletext: {\r\n    color: colors.lightWhite,\r\n    fontFamily: font.extrabold,\r\n    position: \"absolute\", // child\r\n    top: 60, // position where you want\r\n    left: 80,\r\n    fontSize: 24\r\n  },\r\n  welcometext: {\r\n    color: colors.lightWhite,\r\n    fontFamily: font.gloria,\r\n    position: \"absolute\", // child\r\n    top: 16, // position where you want\r\n    left: 110,\r\n    fontSize: 24,\r\n    textTransform: \"uppercase\"\r\n  }\r\n});\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst Icon = () => {\r\n  return (\r\n    <Svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <Path\r\n        fill=\"black\"\r\n        d=\"M0 3.795l2.995-2.98 11.132 11.185-11.132 11.186-2.995-2.981 8.167-8.205-8.167-8.205zm18.04 8.205l-8.167 8.205 2.995 2.98 11.132-11.185-11.132-11.186-2.995 2.98 8.167 8.206z\"\r\n      ></Path>\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport { TouchableOpacity, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\n\r\nimport Arrow from \"../icons/Arrow\";\r\n\r\nconst MenuButton = props => {\r\n  const { text, onPress } = props;\r\n  return (\r\n    <TouchableOpacity style={styles.button} onPress={() => onPress()}>\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n      <Arrow></Arrow>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginTop: 32,\r\n    marginBottom: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: colors.lightWhite,\r\n    borderRadius: 0,\r\n    borderWidth: 2,\r\n    borderColor: colors.dark,\r\n    width: 343,\r\n    height: 50,\r\n    paddingLeft: 16,\r\n    paddingRight: 16\r\n  },\r\n  buttonText: {\r\n    color: colors.black,\r\n    fontFamily: font.regular,\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default MenuButton;\r\n","import React from \"react\";\r\nimport { TouchableOpacity, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\n\r\nconst LogoutButton = props => {\r\n  const { text, onPress } = props;\r\n  return (\r\n    <TouchableOpacity style={styles.button} onPress={() => onPress()}>\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginTop: 32,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.dark,\r\n    borderRadius: 0,\r\n    width: \"100%\",\r\n    height: 50,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    position: \"absolute\",\r\n    bottom: 0\r\n  },\r\n  buttonText: {\r\n    textTransform: \"uppercase\",\r\n    fontFamily: font.regular,\r\n    color: colors.lightWhite,\r\n    fontSize: 16,\r\n    paddingBottom: 16\r\n  }\r\n});\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  Button,\r\n  ImageBackground\r\n} from \"react-native\";\r\nimport firebase, { firestore } from \"../config/firebase\";\r\nimport colors from \"../constants/Colors\";\r\nimport Hero from \"../components/Hero\";\r\nimport MenuButton from \"../components/MenuButton\";\r\nimport LogoutButton from \"../components/LogoutButton\";\r\n\r\nconst HomeScreen = props => {\r\n  const { navigation } = props;\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  const { authUser } = useAuth();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Startsidan</Text>\r\n      {authUser ? (\r\n        <View style={styles.container}>\r\n          <Hero />\r\n          {/* main menu */}\r\n          <MenuButton\r\n            text=\"Skapa en aktivitet\"\r\n            onPress={() => {\r\n              navigation.navigate(\"CreateActivityScreen\");\r\n            }}\r\n          />\r\n          <MenuButton\r\n            text=\"Skapa en rutin\"\r\n            onPress={() => {\r\n              navigation.navigate(\"CreateRoutineScreen\");\r\n            }}\r\n          />\r\n          <MenuButton\r\n            text=\"Mina sparade rutiner\"\r\n            onPress={() => {\r\n              navigation.navigate(\"SavedRoutinesScreen\");\r\n            }}\r\n          />\r\n\r\n          <LogoutButton text=\"Logga ut\" onPress={logout} />\r\n        </View>\r\n      ) : (\r\n        <Text>Du är inte inloggad</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightWhite\r\n  },\r\n  button: {\r\n    marginTop: 30,\r\n    marginBottom: 20,\r\n    paddingVertical: 5,\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.button,\r\n    borderRadius: 0,\r\n    width: 200\r\n  },\r\n  buttonText: {\r\n    color: colors.lightWhite\r\n  },\r\n  welcomeImage: {\r\n    width: 400,\r\n    height: 200,\r\n    position: \"relative\"\r\n  },\r\n  text: {\r\n    color: colors.black,\r\n    fontFamily: \"Raleway-Regular\",\r\n    fontSize: 24\r\n  }\r\n});\r\n\r\nexport default HomeScreen;\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   StyleSheet,\r\n//   Text,\r\n//   TouchableOpacity,\r\n//   View,\r\n//   Image,\r\n//   Button,\r\n//   ImageBackground\r\n// } from \"react-native\";\r\n// import firebase, { firestore } from \"../.././config/Firebase\";\r\n// import { auth } from \"../.././config/Firebase\";\r\n// import colors from \"../constants/Colors\";\r\n// import Hero from \"../components/Hero\";\r\n// import MenuButton from \"../components/MenuButton\";\r\n// import LogoutButton from \"../components/LogoutButton\";\r\n\r\n// class HomeScreen extends React.Component {\r\n//   get uid() {\r\n//     return auth.currentUser.uid;\r\n//   }\r\n\r\n//   get userRef() {\r\n//     return firestore.doc(`users/${this.uid}`);\r\n//   }\r\n//   handleSignout = () => {\r\n//     firebase\r\n//       .auth()\r\n//       .signOut()\r\n//       .then(() => this.props.navigation.navigate(\"LogInScreen\"))\r\n//       .catch(error => this.setState({ errorMessage: error.message }));\r\n//   };\r\n//   render() {\r\n//     const email = auth.currentUser.uid;\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <Hero />\r\n//         <Text style={styles.text}>Hi {email}!</Text>\r\n\r\n//         {/* main menu */}\r\n//         <MenuButton\r\n//           text=\"Skapa en aktivitet\"\r\n//           onPress={() => {\r\n//             this.props.navigation.navigate(\"CreateActivityScreen\");\r\n//           }}\r\n//         />\r\n//         <MenuButton\r\n//           text=\"Skapa en rutin\"\r\n//           onPress={() => {\r\n//             this.props.navigation.navigate(\"CreateRoutineScreen\");\r\n//           }}\r\n//         />\r\n//         <MenuButton\r\n//           text=\"Mina sparade rutiner\"\r\n//           onPress={() => {\r\n//             this.props.navigation.navigate(\"SavedRoutinesScreen\");\r\n//           }}\r\n//         />\r\n\r\n//         <LogoutButton text=\"Logga ut\" onPress={this.handleSignout} />\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: \"flex-start\",\r\n//     alignItems: \"center\",\r\n//     backgroundColor: colors.lightWhite\r\n//   },\r\n//   button: {\r\n//     marginTop: 30,\r\n//     marginBottom: 20,\r\n//     paddingVertical: 5,\r\n//     alignItems: \"center\",\r\n//     backgroundColor: colors.button,\r\n//     borderRadius: 0,\r\n//     width: 200\r\n//   },\r\n//   buttonText: {\r\n//     color: colors.lightWhite\r\n//   },\r\n//   welcomeImage: {\r\n//     width: 400,\r\n//     height: 200,\r\n//     position: \"relative\"\r\n//   },\r\n//   text: {\r\n//     color: colors.black,\r\n//     fontFamily: \"Raleway-Regular\",\r\n//     fontSize: 24\r\n//   }\r\n// });\r\n// export default HomeScreen;\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput, View, Button } from \"react-native\";\r\nimport firebase from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\n\r\nconst LogInScreen = props => {\r\n  const { navigation } = props;\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [userError, setUserError] = useState(null);\r\n  // Do something while loading\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  const resetForm = () => {\r\n    setUserEmail(\"\");\r\n    setUserPassword(\"\");\r\n    setUserError(\"\");\r\n  };\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  const login = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setUserError(null);\r\n    try {\r\n      await firebase.auth().signInWithEmailAndPassword(userEmail, userPassword);\r\n      // redirect user?\r\n      navigation.navigate(\"HomeScreen\");\r\n    } catch (err) {\r\n      setUserError(err);\r\n    } finally {\r\n      setLoading(false);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Logga in här:</Text>\r\n      <View>\r\n        {authUser ? (\r\n          <>\r\n            {navigation.navigate(\"HomeScreen\")}\r\n            <Text>Du är inloggad</Text>\r\n            <Button title=\"Logga ut\" type=\"submit\" onPress={logout} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              autoCapitalize=\"none\"\r\n              placeholder=\"Email\"\r\n              value={userEmail}\r\n              onChange={e => setUserEmail(e.target.value)}\r\n            />\r\n            <TextInput\r\n              secureTextEntry\r\n              style={styles.textInput}\r\n              autoCapitalize=\"none\"\r\n              placeholder=\"Password\"\r\n              value={userPassword}\r\n              onChange={e => setUserPassword(e.target.value)}\r\n            />\r\n            <Button title=\"Login\" onPress={login} />\r\n            <Button\r\n              title=\"Don't have an account? Sign Up\"\r\n              onPress={() => navigation.navigate(\"SignUpScreen\")}\r\n            />\r\n          </>\r\n        )}\r\n      </View>\r\n      {userError && <Text>{userError.message}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 8\r\n  }\r\n});\r\n\r\nexport default LogInScreen;\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput, View, Button } from \"react-native\";\r\n\r\nimport colors from \"../constants/Colors\";\r\n\r\nimport firebase from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\n\r\nconst SignUpScreen = () => {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [userError, setUserError] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  const resetInput = () => {\r\n    setUserEmail(\"\");\r\n    setUserPassword(\"\");\r\n    setUserError(\"\");\r\n  };\r\n\r\n  const submitForm = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setUserError(null);\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(userEmail, userPassword);\r\n      // redirect user?\r\n    } catch (err) {\r\n      setUserError(err);\r\n    } finally {\r\n      setLoading(false);\r\n      resetInput();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Registrera ditt konto här:</Text>\r\n\r\n      {authUser ? (\r\n        <Text>Du är redan inloggad</Text>\r\n      ) : (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChange={e => setUserEmail(e.target.value)}\r\n            value={userEmail}\r\n          />\r\n          <TextInput\r\n            secureTextEntry\r\n            placeholder=\"Password\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChange={e => setUserPassword(e.target.value)}\r\n            value={userPassword}\r\n          />\r\n          <Button title=\"Sign Up\" type=\"submit\" onPress={submitForm} />\r\n          <Button\r\n            title=\"Already have an account? Login\"\r\n            onPress={() => this.props.navigation.navigate(\"LogInScreen\")}\r\n          />\r\n        </View>\r\n      )}\r\n      {/* <View>{userError && <Text>{userError.message}</Text>}</View> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    borderColor: colors.button,\r\n    borderWidth: 1,\r\n    marginTop: 8\r\n  }\r\n});\r\nexport default SignUpScreen;\r\n","import React, { useState } from \"react\";\r\nimport app from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput\r\n} from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\n\r\nconst AddActivity = () => {\r\n  const db = app.firestore();\r\n\r\n  const [activityName, setActivityName] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(\"\");\r\n\r\n  const number = parseInt(minutes);\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  const resetForm = () => {\r\n    setActivityName(\"\");\r\n    setMinutes(\"\");\r\n  };\r\n\r\n  const isInvalid = activityName === \"\" || minutes === \"\";\r\n\r\n  const addNewActivity = async e => {\r\n    e.preventDefault();\r\n\r\n    if (authUser) {\r\n      // Add data to firebase:\r\n      db.collection(\"routines\")\r\n        .doc(\"oFC3EUrVI4uVTSGJQGLO\")\r\n        .collection(\"activity\")\r\n        .doc()\r\n        .set({\r\n          name: activityName,\r\n          description: number,\r\n          addedByUserUid: authUser.uid\r\n        })\r\n        .then(function() {\r\n          console.log(\"Yes, it worked!\");\r\n          resetForm();\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Min aktiviteter</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        type=\"text\"\r\n        name=\"activityName\"\r\n        id=\"activityName\"\r\n        placeholder=\"Namn\"\r\n        value={activityName}\r\n        onChangeText={e => setActivityName(e.target.value)}\r\n      />\r\n      <TextInput\r\n        style={styles.textInput}\r\n        type=\"text\"\r\n        name=\"minutes\"\r\n        id=\"minutes\"\r\n        placeholder=\"Antal minuter\"\r\n        keyboardType={\"numeric\"} // This prop help to open numeric keyboard\r\n        value={minutes}\r\n        onChangeText={e => setMinutes(e.target.value)}\r\n      />\r\n      <Button\r\n        title=\"Spara\"\r\n        onPress={addNewActivity}\r\n        disabled={isInvalid}\r\n      ></Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightWhite\r\n  },\r\n  button: {\r\n    marginTop: 30,\r\n    marginBottom: 20,\r\n    paddingVertical: 5,\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.button,\r\n    borderRadius: 0,\r\n    width: 200\r\n  },\r\n  buttonText: {\r\n    color: colors.lightWhite\r\n  },\r\n\r\n  textInput: {\r\n    height: 40,\r\n    width: 350,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 3\r\n  }\r\n});\r\n\r\nexport default AddActivity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput\r\n} from \"react-native\";\r\nimport AddActivity from \"../components/AddActivity\";\r\nimport colors from \"../constants/Colors\";\r\n\r\nconst CreateActivityScreen = props => {\r\n  const { navigation } = props;\r\n\r\n  const db = app.firestore();\r\n  const [activity, setActivity] = useState([]);\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const tempArray = [];\r\n    db.collection(\"Routines\")\r\n      .doc(\"Åka träna\")\r\n      .collection(\"Activity\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          tempArray.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setActivity(tempArray);\r\n      });\r\n  }, []);\r\n\r\n  const addNewActivity = object => {\r\n    setActivity([...activity, object]);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Hem\"\r\n        style={styles.button}\r\n        onPress={() => navigation.navigate(\"HomeScreen\")}\r\n      ></Button>\r\n      <Text>Mina aktiviteter</Text>\r\n\r\n      {activity.map(item => (\r\n        <View key={item.id}>\r\n          <Text>{item.name}</Text>\r\n          <Text>{item.description}</Text>\r\n          {/* <Text>{item.addedByUserUid}</Text> */}\r\n        </View>\r\n      ))}\r\n\r\n      {authUser ? (\r\n        <AddActivity addNewActivity={addNewActivity} />\r\n      ) : (\r\n        <Text>Du är inte inloggad</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightWhite\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    color: colors.dark\r\n  }\r\n});\r\nexport default CreateActivityScreen;\r\n\r\n// import React from \"react\";\r\n// import { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\n// import { firestore } from \"../config/firebase\";\r\n// import Activities from \".././components/Activities\";\r\n// import { collectIdsAndDocs } from \"../.././config/utilities\";\r\n\r\n// class CreateActivityScreen extends React.Component {\r\n//   state = {\r\n//     activities: []\r\n//   };\r\n//   unsubscribe = null;\r\n\r\n//   componentDidMount = async () => {\r\n//     this.unsubscribe = firestore\r\n//       .collection(\"activities\")\r\n//       .onSnapshot(snapshot => {\r\n//         const activities = snapshot.docs.map(collectIdsAndDocs);\r\n//         this.setState({ activities });\r\n//       });\r\n//   };\r\n\r\n//   componentWillUnmount = () => {\r\n//     this.unsubscribe();\r\n//   };\r\n\r\n//   render() {\r\n//     const { activities } = this.state;\r\n\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <Text>Hejsan</Text>\r\n//         <Activities activities={activities} />\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: \"flex-start\",\r\n//     alignItems: \"center\",\r\n//     backgroundColor: \"yellow\"\r\n//   }\r\n// });\r\n\r\n// export default CreateActivityScreen;\r\n","import React from \"react\";\r\nimport { TouchableOpacity, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\n\r\nconst LogoutButton = props => {\r\n  const { text, onPress } = props;\r\n  return (\r\n    <TouchableOpacity style={styles.button} onPress={() => onPress()}>\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginTop: 32,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: colors.button,\r\n    borderRadius: 0,\r\n    width: 135,\r\n    height: 50\r\n  },\r\n  buttonText: {\r\n    textTransform: \"uppercase\",\r\n    fontFamily: font.extrabold,\r\n    color: colors.lightWhite,\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default LogoutButton;\r\n","import React, { useState } from \"react\";\r\nimport app from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput\r\n} from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\nimport MainButton from \"./MainButton\";\r\n\r\nconst AddRoutine = () => {\r\n  // const { navigation } = props;\r\n\r\n  const db = app.firestore();\r\n  const [routineName, setRoutineName] = useState(\"\");\r\n  // const [time, setTime] = useState(\"\");\r\n  // const [selectedHours, setSelectedHours] = useState(\"\");\r\n  // const [selectedMinutes, setSelectedMinutes] = useState(\"\");\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  // const resetForm = () => {\r\n  //   setRoutineName(\"\");\r\n  //   setTime(\"\");\r\n  //   setSelectedHours(\"\");\r\n  //   setSelectedMinutes(\"\");\r\n  // };\r\n\r\n  const isInvalid = routineName === \"\";\r\n\r\n  const addNewRoutine = async e => {\r\n    // e.preventDefault();\r\n\r\n    if (authUser) {\r\n      // Add data to firebase:\r\n      db.collection(\"routines\")\r\n        .doc()\r\n        .set({\r\n          name: routineName,\r\n          // description: time,\r\n          addedByUserUid: authUser.uid\r\n        })\r\n        .then(function() {\r\n          console.log(\"Yes, it worked!\");\r\n          // navigation.navigate(\"AddActivityScreen\", {\r\n          //   name: routineName,\r\n          //   addedByUserUid: authUser.uid\r\n          // });\r\n\r\n          // resetForm();\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>Namn på rutinen:</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        type=\"text\"\r\n        name=\"routineName\"\r\n        id=\"routineName\"\r\n        placeholder=\"Namn\"\r\n        value={routineName}\r\n        onChange={e => setRoutineName(e.target.value)}\r\n      />\r\n      <Text style={styles.text}>Vilken tid på klockan ska du vara klar:</Text>\r\n\r\n      {/* <Input\r\n        style={styles.textInput}\r\n        id=\"time\"\r\n        placeholder=\"00:00\"\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={e => setTime(e.target.value)}\r\n      /> */}\r\n      {/* <TimePicker\r\n          selectedHours={selectedHours}\r\n          selectedMinutes={selectedMinutes}\r\n          value={(selectedHours, selectedMinutes)}\r\n          onChange={e => setSelectedHours(e.target.value)}\r\n        /> */}\r\n\r\n      <MainButton text=\"Spara\" onPress={addNewRoutine} disabled={isInvalid} />\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginLeft: 16\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 230,\r\n    borderColor: colors.black,\r\n    borderWidth: 1,\r\n    marginTop: 16,\r\n    fontFamily: font.italic,\r\n    paddingLeft: 5,\r\n    color: colors.dark\r\n  },\r\n  timeInput: {\r\n    height: 40,\r\n    width: 150,\r\n    marginTop: 16,\r\n    fontFamily: font.italic\r\n  },\r\n  text: {\r\n    color: colors.black,\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    fontFamily: font.regular\r\n  }\r\n});\r\n\r\nexport default AddRoutine;\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, ImageBackground } from \"react-native\";\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\n\r\nconst Title = props => {\r\n  const { title, text } = props;\r\n  return (\r\n    <View style={styles.topview}>\r\n      <Text style={styles.titletext}>{title}</Text>\r\n      <View style={styles.circle}>\r\n        <Text style={styles.welcometext}>{text}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  topview: {\r\n    width: \"100%\",\r\n    height: 150,\r\n    position: \"relative\",\r\n    marginTop: 50,\r\n    backgroundColor: colors.dark\r\n  },\r\n  titletext: {\r\n    color: colors.lightWhite,\r\n    position: \"absolute\", // child\r\n    top: 40, // position where you want\r\n    left: 16,\r\n    fontSize: 24,\r\n    fontFamily: font.extrabold,\r\n    textTransform: \"uppercase\"\r\n  },\r\n  circle: {\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\", // child\r\n    top: 25, // position where you want\r\n    right: 16,\r\n    borderRadius: 50,\r\n    backgroundColor: colors.lightWhite\r\n  },\r\n  welcometext: {\r\n    color: colors.lightWhite,\r\n    position: \"absolute\", // child\r\n    top: 16, // position where you want\r\n    right: 10,\r\n    fontSize: 14,\r\n    fontFamily: font.gloria,\r\n    width: \"70%\",\r\n    transform: [{ rotate: \"5deg\" }],\r\n    color: colors.black\r\n  }\r\n});\r\nexport default Title;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput\r\n} from \"react-native\";\r\n\r\nimport colors from \"../constants/Colors\";\r\nimport AddRoutine from \"../components/AddRoutine\";\r\nimport Title from \"../components/Title\";\r\nimport MainButton from \"../components/MainButton\";\r\n\r\nconst CreateRoutineScreen = props => {\r\n  const { navigation } = props;\r\n\r\n  // const db = app.firestore();\r\n  const [routine, setRoutine] = useState([]);\r\n\r\n  // Get user if logged in\r\n  const { authUser } = useAuth();\r\n\r\n  const addNewRoutine = object => {\r\n    setRoutine([...routine, object]);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Hem\"\r\n        style={styles.button}\r\n        onPress={() => navigation.navigate(\"HomeScreen\")}\r\n      ></Button>\r\n      {authUser ? (\r\n        <View style={styles.container}>\r\n          <Title title={\"Skapa en\\nny rutin\"} text=\"Välj namn och tid\" />\r\n          <AddRoutine addNewRoutine={addNewRoutine} />\r\n          <MainButton\r\n            text=\"Gå vidare\"\r\n            onPress={() => {\r\n              navigation.navigate(\"AddActivity\", {\r\n                name: \"hej\", //routineName,\r\n                addedByUserUid: authUser.uid\r\n              });\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <Text>Du är inte inloggad</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: colors.lightWhite\r\n  }\r\n});\r\n\r\nexport default CreateRoutineScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../config/firebase\";\r\nimport { useAuth } from \"../config/auth\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput\r\n} from \"react-native\";\r\n\r\nimport colors from \"../constants/Colors\";\r\nimport font from \"../constants/Fonts\";\r\n\r\nimport AddRoutine from \"../components/AddRoutine\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst SavedRoutineScreen = props => {\r\n  const { navigation } = props;\r\n\r\n  const db = app.firestore();\r\n  const [routine, setRoutine] = useState([]);\r\n\r\n  // Get user if logged in\r\n  // const { authUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const tempArray = [];\r\n\r\n    db.collection(\"Routines\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          tempArray.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setRoutine(tempArray);\r\n      });\r\n  }, []);\r\n\r\n  // const addNewRoutine = object => {\r\n  //   setRoutine([...routine, object]);\r\n  // };\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Hem\"\r\n        style={styles.button}\r\n        onPress={() => navigation.navigate(\"HomeScreen\")}\r\n      ></Button>\r\n      <Title title={\"Mina\\nsparade rutiner\"} text={\"Sparat\"} />\r\n      <Text>Mina rutiner</Text>\r\n      {routine.map(item => (\r\n        <View key={item.id} style={styles.routine}>\r\n          <Text style={styles.infotext}>{item.name}</Text>\r\n          <Text style={styles.infotext}>{item.description}</Text>\r\n          {/* <Text>{item.addedByUserUid}</Text> */}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightWhite\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    color: colors.dark\r\n  },\r\n  routine: {\r\n    backgroundColor: colors.lightWhite,\r\n    borderWidth: 1,\r\n    borderColor: colors.dark,\r\n    width: 343,\r\n    height: 100,\r\n    marginTop: 16\r\n  },\r\n  infotext: {\r\n    fontFamily: font.extrabold,\r\n    fontSize: 18\r\n  }\r\n});\r\nexport default SavedRoutineScreen;\r\n\r\n// import React from \"react\";\r\n// import { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\n// import { firestore } from \"../config/firebase\";\r\n// import Routines from \".././components/Routines\";\r\n// import Title from \".././components/Title\";\r\n// import colors from \".././constants/Colors\";\r\n// import Heart from \".././icons/Heart\";\r\n\r\n// import { collectIdsAndDocs } from \"../.././config/utilities\";\r\n\r\n// class SavedRoutineScreen extends React.Component {\r\n//   state = {\r\n//     routines: []\r\n//   };\r\n//   unsubscribe = null;\r\n\r\n//   componentDidMount = async () => {\r\n//     this.unsubscribe = firestore.collection(\"routines\").onSnapshot(snapshot => {\r\n//       const routines = snapshot.docs.map(collectIdsAndDocs);\r\n//       this.setState({ routines });\r\n//     });\r\n//   };\r\n\r\n//   componentWillUnmount = () => {\r\n//     this.unsubscribe();\r\n//   };\r\n\r\n//   render() {\r\n//     const { routines } = this.state;\r\n\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <TouchableOpacity\r\n//           style={styles.button}\r\n//           onPress={() => {\r\n//             this.props.navigation.navigate(\"HomeScreen\");\r\n//           }}\r\n//         >\r\n//           <Text>HEM</Text>\r\n//         </TouchableOpacity>\r\n//         <Title title={\"Mina\\nsparade rutiner\"} text={\"Sparat\"} />\r\n//         {/* <Heart></Heart> */}\r\n//         <Routines routines={routines} />\r\n//       </View>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: \"flex-start\",\r\n//     alignItems: \"center\",\r\n//     backgroundColor: colors.lightWhite\r\n//   },\r\n//   button: {\r\n//     marginTop: 20\r\n//   }\r\n// });\r\n\r\n// export default SavedRoutineScreen;\r\n","// import { createSwitchNavigator, createAppContainer } from \"react-navigation\";\r\nimport { createSwitchNavigator } from \"@react-navigation/core\";\r\nimport { createBrowserApp } from \"@react-navigation/web\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport LogInScreen from \"../screens/LogInScreen\";\r\nimport SignUpScreen from \"../screens/SignUpScreen\";\r\nimport CreateActivityScreen from \"../screens/CreateActivityScreen\";\r\nimport CreateRoutineScreen from \"../screens/CreateRoutineScreen\";\r\nimport SavedRoutinesScreen from \"../screens/SavedRoutinesScreen\";\r\n\r\nconst SwitchNavigator = createSwitchNavigator(\r\n  {\r\n    HomeScreen: {\r\n      screen: HomeScreen\r\n    },\r\n    LogInScreen: {\r\n      screen: LogInScreen\r\n    },\r\n    SignUpScreen: {\r\n      screen: SignUpScreen\r\n    },\r\n    CreateActivityScreen: {\r\n      screen: CreateActivityScreen\r\n    },\r\n    CreateRoutineScreen: {\r\n      screen: CreateRoutineScreen\r\n    },\r\n    SavedRoutinesScreen: {\r\n      screen: SavedRoutinesScreen\r\n    }\r\n  },\r\n  {\r\n    initialRouteName: \"LogInScreen\"\r\n  }\r\n);\r\n\r\nexport default createBrowserApp(SwitchNavigator);\r\n","import React, { useEffect, useState } from \"react\";\n\n// import * as Font from \"expo-font\";\nimport { View, StyleSheet } from \"react-native\";\nimport { AuthProvider } from \"./config/auth\";\n\nimport SwitchNavigator from \"./navigation/Navigation\";\nconsole.disableYellowBox = [\"Warning\"];\n\nfunction App() {\n  // const [fontLoaded, setLoaded] = useState(false);\n\n  // useEffect(() => {\n  //   loadFonts();\n  // }, []);\n\n  // const loadFonts = async () => {\n  //   await Font.loadAsync({\n  //     \"Raleway-ExtraBold\": require(\"./assets/fonts/Raleway-ExtraBold.ttf\"),\n  //     \"Raleway-LightItalic\": require(\"./assets/fonts/Raleway-LightItalic.ttf\"),\n  //     \"Raleway-Regular\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\n  //     \"GloriaHallelujah-Regular\": require(\"./assets/fonts/GloriaHallelujah-Regular.ttf\")\n  //   });\n  //   setLoaded(true);\n  // };\n\n  return (\n    <View style={styles.container}>\n      <AuthProvider>\n        <SwitchNavigator />\n      </AuthProvider>\n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});\n","import App from \"./App.js\";\r\nimport React from \"react\";\r\nimport { AppRegistry } from \"react-native\";\r\n\r\n// register the app\r\nAppRegistry.registerComponent(\"App\", () => App);\r\n\r\nAppRegistry.runApplication(\"App\", {\r\n  initialProps: {},\r\n  rootTag: document.getElementById(\"root\")\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/black.bda60888.jpg\";"],"sourceRoot":""}